sudo: required
language: python
# cache:
#   directories:
#     - "$HOME/google-cloud-sdk/"
services:
  - docker
env:
  global:
    - ELASTICSEARCH_NODES="http://localhost:9200"
    - QUAY_REPO="quay.io/opentargets/mrtarget"
python:
  - 2.7
before_install:
  - docker pull docker.elastic.co/elasticsearch/elasticsearch:5.6.11
  - docker run -d -p 9200:9200 -p 9300:9300 --name=ES elasticsearch:5.6.11
install:
  - pip install -r requirements.txt
  - pip install -e .
script:
  - make dry_run
  - pytest --cov=mrtarget --cov-report term tests/ --fulltrace
branches:
  only:
  - master
  - "/\\d+\\.\\d+\\.\\d+/"
  - "/mk.*/"
  - "/af.*/"
  - "/ck.*/"
  - "/ms.*/"
  - "/MS.*/"
  - "/gp.*/"
  - "/pl.*/"
#deploy:
#  provider: releases
#  api_key: ${GITHUB_KEY}
#  file_glob: true
#  file:
#    - "target/universal/ot-genetics-api-latest.zip"
#  on:
#    repo: opentargets/genetics-api
#    tags: true
#  skip_cleanup: true
notifications:
  email:
    recipients:
    - ops@opentargets.org
    on_success: never
    on_failure: always
after_success:
  - codecov
  - docker pull "${QUAY_REPO}:${TRAVIS_BRANCH}" || true
  - docker build --pull --cache-from "${QUAY_REPO}:${TRAVIS_BRANCH}" --tag "${QUAY_REPO}" .
  - docker login -u="${QUAY_USER}" -p="${QUAY_PASSWORD}" quay.io
#   - git_sha="$(git rev-parse --short HEAD)"
  - git_sha="${TRAVIS_COMMIT}"
  - docker tag "${QUAY_REPO}" "${QUAY_REPO}:${TRAVIS_BRANCH}"
  - docker tag "${QUAY_REPO}" "${QUAY_REPO}:${git_sha}-${TRAVIS_BRANCH}"
  - docker push "${QUAY_REPO}:${TRAVIS_BRANCH}" && docker push "${QUAY_REPO}:${git_sha}-${TRAVIS_BRANCH}"
#  - if [ ! -d "google-cloud-sdk/bin" ]; then rm -rf "google-cloud-sdk"; curl 'https://sdk.cloud.google.com' | bash; fi
#  - source google-cloud-sdk/path.bash.inc
#  - gcloud version
#  - gcloud --quiet components update
#  - echo $GCLOUD_KEY | base64 --decode > gcloud.p12
#  - gcloud auth activate-service-account $GCLOUD_EMAIL --key-file gcloud.p12
#  - ssh-keygen -f ~/.ssh/google_compute_engine -N ""
#  # Push to Google container registry
#  - docker build -t gcr.io/$CLOUDSDK_CORE_PROJECT/$CLOUDSDK_CORE_PROJECT:v1 .
#  - gcloud docker push gcr.io/$CLOUDSDK_CORE_PROJECT/$CLOUDSDK_CORE_PROJECT:v1 > /dev/null
