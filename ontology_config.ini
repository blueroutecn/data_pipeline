[uris]
hpo=http://compbio.charite.de/jenkins/job/hpo/1702/artifact/hp/hp.owl
mp=http://www.informatics.jax.org/downloads/reports/mp.owl
efo=https://sourceforge.net/p/efo/code/HEAD/tree/trunk/src/efoinowl/InferredEFOOWLview/efo_inferred_all.owl?format=raw

[disease_phenotypes_uris]
ibd_phenotypes=https://sourceforge.net/p/efo/code/HEAD/tree/trunk/src/efoassociations/ibd_2_pheno_associations.owl?format=raw
immune_disease_phenotypes=https://sourceforge.net/p/efo/code/HEAD/tree/trunk/src/efoassociations/immune_disease_2_pheno.owl?format=raw
rare_albuminuria_phenotypes=https://sourceforge.net/p/efo/code/HEAD/tree/trunk/src/efoassociations/rareAlbuminuria_associations_03Jun15.owl?format=raw
rare_ibd_phenotypes=https://sourceforge.net/p/efo/code/HEAD/tree/trunk/src/efoassociations/rareIBDpheno.owl?format=raw
ordo_phenotypes=https://sourceforge.net/p/efo/code/HEAD/tree/trunk/src/efoassociations/ordo_hpo_mappings.owl?format=raw
charite_phenotypes=https://sourceforge.net/p/efo/code/HEAD/tree/trunk/src/efoassociations/charite_HP_ORDO_07Oct15.owl?format=raw

[sparql_templates]
transitive_closure=%sSELECT ?node_uri ?parent_uri sample(?parent_label) AS ?parent_label ?dist ?path
 WHERE
  {
    {
      SELECT *
      %s
      WHERE
        {
          ?node_uri %s ?y .
          ?node_uri rdfs:label ?parent_label
        }
    }
    OPTION ( TRANSITIVE, t_min(1), t_max(15), T_NO_CYCLES, t_in (?y), t_out (?node_uri), t_step (?y) as ?parent_uri, t_step ('step_no') as ?dist, t_step ('path_id') as ?path ) .
    FILTER ( ?y = %s )
  }
 ORDER BY ?path ?dist

[efo_first_child_node]
type=copy_to_table
query=SELECT DISTINCT ?efo_node ?child_node
 FROM <http://www.targetvalidation.org/>
 FROM <http://www.ebi.ac.uk/efo/>
 FROM <http://www.ebi.ac.uk/efo/rare_albuminuria/>
 {
    ?efo_node rdfs:subClassOf* <http://www.targetvalidation.org/cttv_root> .
    ?child_node rdfs:subClassOf ?efo_node
 }
target_table=rdf_conversion.efo_first_child_node
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  parent_uri text,
  first_child_uri text,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} VALUES (%%s,%%s)
comment="First child nodes of every EFO node"

[chembl_target_path]
type=uri_path
query=
 SELECT ?node_uri ?parent_uri sample(?parent_label) AS ?parent_label ?dist ?path
 WHERE
  {
    {
      SELECT *
      WHERE
        {
          ?node_uri rdfs:subClassOf ?y .
          ?node_uri rdfs:label ?parent_label
        }
    }
    OPTION ( TRANSITIVE, t_min(1), t_max(15), T_NO_CYCLES, t_in (?y), t_out (?node_uri), t_step (?y) as ?parent_uri, t_step ('step_no') as ?dist, t_step ('path_id') as ?path ) .
    FILTER ( ?y = <http://purl.obolibrary.org/obo/CHEMBL_PC_0> )
  }
 ORDER BY ?path ?dist
target_table=rdf_conversion.chembl_target_path
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  tree_path jsonb,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
comment="Chembl version 20 target classification ontology"
insert_table=INSERT INTO {} (uri, tree_path) VALUES (%%s,%%s::jsonb)


#efo:EFO_0000408
#<http://www.ifomis.org/bfo/1.1/snap#Disposition>
[efo_path]
type=uri_path
query=PREFIX efo: <http://www.ebi.ac.uk/efo/>
 SELECT ?node_uri ?parent_uri sample(?parent_label) AS ?parent_label ?dist ?path
 FROM <http://www.targetvalidation.org/>
 FROM <http://www.ebi.ac.uk/efo/>
 FROM <http://www.ebi.ac.uk/efo/rare_albuminuria/> 
 WHERE
  {
    {
      SELECT *
      WHERE
        {
          ?node_uri rdfs:subClassOf ?y .
          ?node_uri rdfs:label ?parent_label
        }
    }
    OPTION ( TRANSITIVE, t_min(1), t_max(15), T_NO_CYCLES, t_in (?y), t_out (?node_uri), t_step (?y) as ?parent_uri, t_step ('step_no') as ?dist, t_step ('path_id') as ?path ) .
    FILTER ( ?y = <http://www.targetvalidation.org/cttv_root> )
  }
 ORDER BY ?path ?dist
target_table=rdf_conversion.efo_path
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  tree_path jsonb,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} (uri, tree_path) VALUES (%%s,%%s::jsonb)
comment="EFO path as used by CTTV: the root node is <http://www.targetvalidation.org/cttv_root>"
;CONSTRAINT efo_path_pkey PRIMARY KEY (id)

[efo_path_full]
type=uri_path
query=PREFIX efo: <http://www.ebi.ac.uk/efo/>
 SELECT ?node_uri ?parent_uri sample(?parent_label) AS ?parent_label ?dist ?path
 FROM <http://www.ebi.ac.uk/efo/>
 FROM <http://www.ebi.ac.uk/efo/rare_albuminuria/> 
 WHERE
  {
    {
      SELECT *
      WHERE
        {
          ?node_uri rdfs:subClassOf ?y .
          ?node_uri rdfs:label ?parent_label
        }
    }
    OPTION ( TRANSITIVE, t_min(1), T_DISTINCT, T_NO_CYCLES, t_in (?y), t_out (?node_uri), t_step (?y) as ?parent_uri, t_step ('step_no') as ?dist, t_step ('path_id') as ?path ) .
    FILTER ( ?y = efo:EFO_0000001 )
  }
 ORDER BY ?path ?dist
target_table=rdf_conversion.efo_path_full
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  tree_path jsonb,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} (uri, tree_path) VALUES (%%s,%%s::jsonb)
comment="EFO path in original EFO: root node is efo:EFO_0000001"

[eco_path]
type=uri_path
query=PREFIX obo: <http://purl.obolibrary.org/obo/>
 SELECT ?node_uri ?parent_uri sample(?parent_label) AS ?parent_label ?dist ?path
 WHERE
  {
    {
      SELECT *
      WHERE
        {
          ?node_uri rdfs:subClassOf ?y .
          ?node_uri rdfs:label ?parent_label
        }
    }
    OPTION ( TRANSITIVE, T_NO_CYCLES, T_DISTINCT, t_min(1), t_in (?y), t_out (?node_uri), t_step (?y) as ?parent_uri, t_step ('step_no') as ?dist, t_step ('path_id') as ?path ) .
    FILTER ( ?y = <http://www.targetvalidation.org/evidence/cttv_evidence> )
  }
 ORDER BY ?path ?dist
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  tree_path jsonb,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} (uri, tree_path) VALUES (%%s,%%s::jsonb)
target_table=rdf_conversion.eco_path
comment="Evidence codes used by CTTV; the root node is <http://www.targetvalidation.org/evidence/cttv_evidence>"

[eco_names]
type=copy_to_table
query=PREFIX n3: <http://purl.obolibrary.org/obo/>

 SELECT DISTINCT *
 WHERE
   {
  ?eco rdfs:subClassOf+ <http://www.targetvalidation.org/evidence/cttv_evidence> .
  ?eco rdfs:label ?label .
  OPTIONAL { ?eco n3:def ?def }
 }
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  label text,
  description text,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} VALUES (%%s, %%s, %%s)
target_table=rdf_conversion.eco_names
comment="primary names and descriptions of all evidence-code URIs"

[efo_obsolete_class]
type=copy_to_table
query=SELECT * FROM <http://www.ebi.ac.uk/efo/>
 WHERE
 {
          ?uri rdfs:subClassOf <http://www.geneontology.org/formats/oboInOwl#ObsoleteClass> .
          ?uri <http://www.ebi.ac.uk/efo/reason_for_obsolescence> ?reason
 }
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  reason text,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} VALUES (%%s, %%s)
target_table=rdf_conversion.efo_obsolete_class
comment="EFO obsolete classes"

[efo_names]
type=copy_to_table
query=PREFIX efo: <http://www.ebi.ac.uk/efo/>
 SELECT DISTINCT ?uri sample(?label) AS ?label ?synonym ?description
 FROM <http://www.targetvalidation.org/>
 FROM <http://www.ebi.ac.uk/efo/>
 FROM <http://www.ebi.ac.uk/efo/rare_albuminuria/> 
 WHERE {
                ?uri rdfs:label ?label .
                ?uri rdfs:subClassOf* <http://www.targetvalidation.org/cttv_root> .
  		OPTIONAL { ?uri efo:alternative_term ?synonym } .
                OPTIONAL { ?uri efo:definition ?description }
 }
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  label text,
  synonyms text[],
  description text
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} VALUES (%%s, %%s, %%s, %%s)
target_table=rdf_conversion.efo_names
comment="primary labels of all EFO URIs"

[cttv_target]
type=copy_to_table
query=PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
 
 SELECT DISTINCT ?s ?comment ?label FROM <http://www.targetvalidation.org/> WHERE {
   		?s rdfs:subClassOf+ <http://identifiers.org/cttv.target/cttv_target> .
   		OPTIONAL { ?s rdfs:comment ?comment } .
   		OPTIONAL { ?s rdfs:label ?label }
 }
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {}
 (
  uri text NOT NULL,
  description text,
  label text,
  id serial primary key NOT NULL
 );  COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} VALUES (%%s,%%s,%%s)
target_table=rdf_conversion.cttv_target
comment="CTTV target ontology"

[cttv_activity]
type=copy_to_table
query=PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
 
 SELECT DISTINCT ?s ?comment ?label FROM <http://www.targetvalidation.org/> WHERE {
   		?s rdfs:subClassOf+ <http://identifiers.org/cttv.activity/cttv_activity> .
   		OPTIONAL { ?s rdfs:comment ?comment } .
   		OPTIONAL { ?s rdfs:label ?label } .
 }
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {}
 (
  uri text NOT NULL,
  description text,
  label text,
  id serial primary key NOT NULL
 );  COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} VALUES (%%s,%%s,%%s)
target_table=rdf_conversion.cttv_activity
comment="CTTV activity ontology"

[disease_phenotype]
type=copy_to_table
query=PREFIX obo: <http://purl.obolibrary.org/obo/>
 PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
 PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
 PREFIX owl: <http://www.w3.org/2002/07/owl#>
 PREFIX oban: <http://purl.org/oban/>
 SELECT DISTINCT
 ?assoc_id ?efo_disease_uri sample(?efo_disease_label) AS ?efo_disease_label ?hpo_uri sample(?hpo_phenotype_label) AS ?hpo_phenotype_label
 WHERE {
   ?assoc_id oban:association_has_subject ?efo_disease_uri .
   ?efo_disease_uri rdfs:label ?efo_disease_label .
   ?assoc_id oban:association_has_object ?hpo_uri .
   ?hpo_uri rdfs:label ?hpo_phenotype_label .
   ?hpo_uri rdfs:subClassOf* obo:HP_0000001
 }
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {}
 (
  assoc_id text,
  efo_disease_uri text,
  efo_disease_label text,
  hpo_uri text,
  hpo_phenotype_label text
 );  COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} VALUES (%%s,%%s,%%s,%%s,%%s)
target_table=rdf_conversion.disease_to_phenotype
comment="Disease to phenotype mapping in EFO"

[disease_anatomy]
type=copy_to_table
query= PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
 PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
 PREFIX owl: <http://www.w3.org/2002/07/owl#>
 PREFIX efo: <http://www.ebi.ac.uk/efo/>
 
 SELECT distinct ?subject ?subject_label ?related_anatomy ?related_anatomy_label
 FROM <http://www.ebi.ac.uk/efo/>
 WHERE {
 ?subject a owl:Class .
 ?subject rdfs:subClassOf* <http://www.ebi.ac.uk/efo/EFO_0000408> .
   
 ?subject (rdfs:subClassOf|owl:equivalentClass) 
      [ owl:onProperty <http://www.ebi.ac.uk/efo/EFO_0000784> ;
        owl:someValuesFrom ?related_anatomy ] .
   
 ?subject rdfs:label ?subject_label . 
 ?related_anatomy rdfs:label ?related_anatomy_label . 
 }
 ORDER BY ?related_anatomy_label
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {}
 (
  efo_disease_uri text,
  efo_disease_label text,
  efo_anatomy_uri text,
  efo_anatomy_label text
 );  COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} VALUES (%%s,%%s,%%s,%%s)
target_table=rdf_conversion.disease_to_anatomy
comment="Disease to anatomy mapping in EFO"

;biological_process http://purl.obolibrary.org/obo/GO_0008150
;cellular_component http://purl.obolibrary.org/obo/GO_0005575
;molecular_function http://purl.obolibrary.org/obo/GO_0003674

[go_biological_process]
type=uri_path
query=SELECT ?node_uri ?parent_uri sample(?parent_label) AS ?parent_label ?dist ?path
 FROM <http://purl.obolibrary.org/obo/go.owl>
 WHERE
  {
    {
      SELECT *
      WHERE
        {
          ?node_uri rdfs:subClassOf ?y .
          ?node_uri rdfs:label ?parent_label
        }
    }
    OPTION ( TRANSITIVE, t_min(1), T_DISTINCT, T_NO_CYCLES, t_in (?y), t_out (?node_uri), t_step (?y) as ?parent_uri, t_step ('step_no') as ?dist, t_step ('path_id') as ?path ) .
    FILTER ( ?y = <http://purl.obolibrary.org/obo/GO_0008150> )
  }
 ORDER BY ?path ?dist
target_table=rdf_conversion.go_biological_process
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  tree_path jsonb,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} (uri, tree_path) VALUES (%%s,%%s::jsonb)
comment="GO biological process"

[go_cellular_component]
type=uri_path
query=SELECT ?node_uri ?parent_uri sample(?parent_label) AS ?parent_label ?dist ?path
 FROM <http://purl.obolibrary.org/obo/go.owl>
 WHERE
  {
    {
      SELECT *
      WHERE
        {
          ?node_uri rdfs:subClassOf ?y .
          ?node_uri rdfs:label ?parent_label
        }
    }
    OPTION ( TRANSITIVE, t_min(1), T_DISTINCT, T_NO_CYCLES, t_in (?y), t_out (?node_uri), t_step (?y) as ?parent_uri, t_step ('step_no') as ?dist, t_step ('path_id') as ?path ) .
    FILTER ( ?y = <http://purl.obolibrary.org/obo/GO_0005575> )
  }
 ORDER BY ?path ?dist
target_table=rdf_conversion.go_cellular_component
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  tree_path jsonb,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} (uri, tree_path) VALUES (%%s,%%s::jsonb)
comment="GO cellular component"

[go_molecular_function]
type=uri_path
query=SELECT ?node_uri ?parent_uri sample(?parent_label) AS ?parent_label ?dist ?path
 FROM <http://purl.obolibrary.org/obo/go.owl>
 WHERE
  {
    {
      SELECT *
      WHERE
        {
          ?node_uri rdfs:subClassOf ?y .
          ?node_uri rdfs:label ?parent_label
        }
    }
    OPTION ( TRANSITIVE, t_min(1), T_DISTINCT, T_NO_CYCLES, t_in (?y), t_out (?node_uri), t_step (?y) as ?parent_uri, t_step ('step_no') as ?dist, t_step ('path_id') as ?path ) .
    FILTER ( ?y = <http://purl.obolibrary.org/obo/GO_0003674> )
  }
 ORDER BY ?path ?dist
target_table=rdf_conversion.go_molecular_function
create_table=CREATE UNLOGGED TABLE IF NOT EXISTS {} (
  uri text,
  tree_path jsonb,
  id serial primary key NOT NULL
 ); COMMENT ON TABLE {} IS '{}';
insert_table=INSERT INTO {} (uri, tree_path) VALUES (%%s,%%s::jsonb)
comment="GO molecular function"

[do_nothing]
type=do_nothing
query=
target_table=
create_table=
insert_table=
comment="This command does nothing"