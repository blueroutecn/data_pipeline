version: 2
jobs:
  build:
    working_directory: ~/mrtarget
    docker:
      - image: circleci/python:2.7
    environment:
      - CTTV_MINIMAL=True
    steps:
      - checkout
      - restore_cache:
         key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install requirements.txt
          command: |
            pip install virtualenv
            virtualenv venv
            . venv/bin/activate
            pip install -U --no-cache-dir -r requirements.txt
            pip uninstall -y requests
            pip install requests
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Dry run to check imports
          command: |
            . venv/bin/activate
            mrtarget --dry-run
      - setup_remote_docker:
        reusable: true    # this allows caching, but may become a premium feature
        exclusive: true
      - run:
          name: Build and tag Docker image
          command: |
            TAG="circle-${CIRCLE_BUILD_NUM}"
            [ "$CIRCLE_BRANCH" = "master" ] \
              && export LATEST_FLAG=latest \
              || export LATEST_FLAG=dev-latest
            docker build -t ${GCR_REPO}:$TAG \
              -t ${GCR_REPO}:${CIRCLE_BRANCH} \
              -t ${GCR_REPO}:${LATEST_FLAG} .
      - run:
          name: Push to GCR
          command: |
            docker login -u _json_key -p $GCR_JSON_KEY_FILE https://eu.gcr.io
            docker push ${GCR_REPO}:$TAG


#       - store_artifacts:
#           path: /tmp/test-results
#           destination: raw-test-output

#       - store_test_results:
#           path: /tmp/test-results
